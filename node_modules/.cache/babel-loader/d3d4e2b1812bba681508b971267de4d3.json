{"ast":null,"code":"// Components\nimport VPicker from '../../components/VPicker'; // Mixins\n\nimport Colorable from '../colorable';\nimport Elevatable from '../../mixins/elevatable';\nimport Themeable from '../themeable'; // Utils\n\nimport mixins from '../../util/mixins';\nexport default mixins(Colorable, Elevatable, Themeable\n/* @vue/component */\n).extend({\n  name: 'picker',\n  props: {\n    flat: Boolean,\n    fullWidth: Boolean,\n    headerColor: String,\n    landscape: Boolean,\n    noTitle: Boolean,\n    width: {\n      type: [Number, String],\n      default: 290\n    }\n  },\n  methods: {\n    genPickerTitle() {\n      return null;\n    },\n\n    genPickerBody() {\n      return null;\n    },\n\n    genPickerActionsSlot() {\n      return this.$scopedSlots.default ? this.$scopedSlots.default({\n        save: this.save,\n        cancel: this.cancel\n      }) : this.$slots.default;\n    },\n\n    genPicker(staticClass) {\n      const children = [];\n\n      if (!this.noTitle) {\n        const title = this.genPickerTitle();\n        title && children.push(title);\n      }\n\n      const body = this.genPickerBody();\n      body && children.push(body);\n      children.push(this.$createElement('template', {\n        slot: 'actions'\n      }, [this.genPickerActionsSlot()]));\n      return this.$createElement(VPicker, {\n        staticClass,\n        props: {\n          color: this.headerColor || this.color,\n          dark: this.dark,\n          elevation: this.elevation,\n          flat: this.flat,\n          fullWidth: this.fullWidth,\n          landscape: this.landscape,\n          light: this.light,\n          width: this.width,\n          noTitle: this.noTitle\n        }\n      }, children);\n    }\n\n  }\n});","map":{"version":3,"mappings":"AAAA;AACA,OAAOA,OAAP,MAAoB,0BAApB,C,CAEA;;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,SAAP,MAAsB,cAAtB,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAKA,eAAeA,MAAM,CACnBH,SADmB,EAEnBC,UAFmB,EAGnBC;AACF;AAJqB,CAAN,CAKbE,MALa,CAKN;AACPC,MAAI,EAAE,QADC;AAGPC,OAAK,EAAE;AACLC,QAAI,EAAEC,OADD;AAELC,aAAS,EAAED,OAFN;AAGLE,eAAW,EAAEC,MAHR;AAILC,aAAS,EAAEJ,OAJN;AAKLK,WAAO,EAAEL,OALJ;AAMLM,SAAK,EAAE;AACLC,UAAI,EAAE,CAACC,MAAD,EAASL,MAAT,CADD;AAELM,aAAO,EAAE;AAFJ;AANF,GAHA;AAePC,SAAO,EAAE;AACPC,kBAAc;AACZ,aAAO,IAAP;AAFK;;AAIPC,iBAAa;AACX,aAAO,IAAP;AALK;;AAOPC,wBAAoB;AAClB,aAAO,KAAKC,YAAL,CAAkBL,OAAlB,GAA4B,KAAKK,YAAL,CAAkBL,OAAlB,CAA0B;AAC3DM,YAAI,EAAG,KAAaA,IADuC;AAE3DC,cAAM,EAAG,KAAaA;AAFqC,OAA1B,CAA5B,GAGF,KAAKC,MAAL,CAAYR,OAHjB;AARK;;AAaPS,aAAS,CAAEC,WAAF,EAAqB;AAC5B,YAAMC,QAAQ,GAAY,EAA1B;;AAEA,UAAI,CAAC,KAAKf,OAAV,EAAmB;AACjB,cAAMgB,KAAK,GAAG,KAAKV,cAAL,EAAd;AACAU,aAAK,IAAID,QAAQ,CAACE,IAAT,CAAcD,KAAd,CAAT;AACD;;AAED,YAAME,IAAI,GAAG,KAAKX,aAAL,EAAb;AACAW,UAAI,IAAIH,QAAQ,CAACE,IAAT,CAAcC,IAAd,CAAR;AAEAH,cAAQ,CAACE,IAAT,CAAc,KAAKE,cAAL,CAAoB,UAApB,EAAgC;AAAEC,YAAI,EAAE;AAAR,OAAhC,EAAqD,CAAC,KAAKZ,oBAAL,EAAD,CAArD,CAAd;AAEA,aAAO,KAAKW,cAAL,CAAoBjC,OAApB,EAA6B;AAClC4B,mBADkC;AAElCrB,aAAK,EAAE;AACL4B,eAAK,EAAE,KAAKxB,WAAL,IAAoB,KAAKwB,KAD3B;AAELC,cAAI,EAAE,KAAKA,IAFN;AAGLC,mBAAS,EAAE,KAAKA,SAHX;AAIL7B,cAAI,EAAE,KAAKA,IAJN;AAKLE,mBAAS,EAAE,KAAKA,SALX;AAMLG,mBAAS,EAAE,KAAKA,SANX;AAOLyB,eAAK,EAAE,KAAKA,KAPP;AAQLvB,eAAK,EAAE,KAAKA,KARP;AASLD,iBAAO,EAAE,KAAKA;AATT;AAF2B,OAA7B,EAaJe,QAbI,CAAP;AAcD;;AAxCM;AAfF,CALM,CAAf","names":["VPicker","Colorable","Elevatable","Themeable","mixins","extend","name","props","flat","Boolean","fullWidth","headerColor","String","landscape","noTitle","width","type","Number","default","methods","genPickerTitle","genPickerBody","genPickerActionsSlot","$scopedSlots","save","cancel","$slots","genPicker","staticClass","children","title","push","body","$createElement","slot","color","dark","elevation","light"],"sourceRoot":"","sources":["../../../src/mixins/picker/index.ts"],"sourcesContent":["// Components\nimport VPicker from '../../components/VPicker'\n\n// Mixins\nimport Colorable from '../colorable'\nimport Elevatable from '../../mixins/elevatable'\nimport Themeable from '../themeable'\n\n// Utils\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue'\n\nexport default mixins(\n  Colorable,\n  Elevatable,\n  Themeable\n/* @vue/component */\n).extend({\n  name: 'picker',\n\n  props: {\n    flat: Boolean,\n    fullWidth: Boolean,\n    headerColor: String,\n    landscape: Boolean,\n    noTitle: Boolean,\n    width: {\n      type: [Number, String],\n      default: 290,\n    },\n  },\n\n  methods: {\n    genPickerTitle (): VNode | null {\n      return null\n    },\n    genPickerBody (): VNode | null {\n      return null\n    },\n    genPickerActionsSlot () {\n      return this.$scopedSlots.default ? this.$scopedSlots.default({\n        save: (this as any).save,\n        cancel: (this as any).cancel,\n      }) : this.$slots.default\n    },\n    genPicker (staticClass: string) {\n      const children: VNode[] = []\n\n      if (!this.noTitle) {\n        const title = this.genPickerTitle()\n        title && children.push(title)\n      }\n\n      const body = this.genPickerBody()\n      body && children.push(body)\n\n      children.push(this.$createElement('template', { slot: 'actions' }, [this.genPickerActionsSlot()]))\n\n      return this.$createElement(VPicker, {\n        staticClass,\n        props: {\n          color: this.headerColor || this.color,\n          dark: this.dark,\n          elevation: this.elevation,\n          flat: this.flat,\n          fullWidth: this.fullWidth,\n          landscape: this.landscape,\n          light: this.light,\n          width: this.width,\n          noTitle: this.noTitle,\n        },\n      }, children)\n    },\n  },\n})\n"]},"metadata":{},"sourceType":"module"}