{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport moment from \"moment\";\nexport default {\n  data: function data() {\n    return {\n      dates: [\"\"],\n      days: {\n        sunday: 0,\n        monday: 0,\n        tuesday: 0,\n        wednesday: 0,\n        thursday: 0,\n        friday: 0,\n        saturday: 0\n      },\n      datesPT: [\"\"],\n      PTdays: {\n        sunday: 0,\n        monday: 0,\n        tuesday: 0,\n        wednesday: 0,\n        thursday: 0,\n        friday: 0,\n        saturday: 0\n      }\n    };\n  },\n  mounted: function mounted() {\n    console.log(\"mounted\");\n  },\n  methods: {\n    /**\n     * Regular days methods\n     */\n    updateDates: function updateDates(dates) {\n      this.prepDays();\n      this.countDays(dates);\n    },\n    countDays: function countDays(dates) {\n      var _this = this;\n\n      dates.forEach(function (date) {\n        if (date != \"\") {\n          var day = moment(date).format(\"dddd\");\n\n          _this.addToDays(day);\n        }\n      });\n      console.log(this.days);\n    },\n    prepDays: function prepDays() {\n      this.days.sunday = 0;\n      this.days.monday = 0;\n      this.days.tuesday = 0;\n      this.days.wednesday = 0;\n      this.days.thursday = 0;\n      this.days.friday = 0;\n      this.days.saturday = 0;\n    },\n    addToDays: function addToDays(day) {\n      switch (day) {\n        case \"Sunday\":\n          this.days.sunday += 1;\n          break;\n\n        case \"Monday\":\n          this.days.monday += 1;\n          break;\n\n        case \"Tuesday\":\n          this.days.tuesday += 1;\n          break;\n\n        case \"Wednesday\":\n          this.days.wednesday += 1;\n          break;\n\n        case \"Thursday\":\n          this.days.thursday += 1;\n          break;\n\n        case \"Friday\":\n          this.days.friday += 1;\n          break;\n\n        case \"Saturday\":\n          this.days.saturday += 1;\n          break;\n\n        default:\n          break;\n      }\n    },\n\n    /**\n     * PT days methods\n     */\n    updatePTDates: function updatePTDates(dates) {\n      this.prepPTDays();\n      this.countPTDays(dates);\n    },\n    countPTDays: function countPTDays(dates) {\n      var _this2 = this;\n\n      dates.forEach(function (date) {\n        if (date != \"\") {\n          var day = moment(date).format(\"dddd\");\n\n          _this2.addToPTDays(day);\n        }\n      });\n      console.log(this.days);\n    },\n    prepPTDays: function prepPTDays() {\n      this.PTdays.sunday = 0;\n      this.PTdays.monday = 0;\n      this.PTdays.tuesday = 0;\n      this.PTdays.wednesday = 0;\n      this.PTdays.thursday = 0;\n      this.PTdays.friday = 0;\n      this.PTdays.saturday = 0;\n    },\n    addToPTDays: function addToPTDays(day) {\n      switch (day) {\n        case \"Sunday\":\n          this.PTdays.sunday += 1;\n          break;\n\n        case \"Monday\":\n          this.PTdays.monday += 1;\n          break;\n\n        case \"Tuesday\":\n          this.PTdays.tuesday += 1;\n          break;\n\n        case \"Wednesday\":\n          this.PTdays.wednesday += 1;\n          break;\n\n        case \"Thursday\":\n          this.PTdays.thursday += 1;\n          break;\n\n        case \"Friday\":\n          this.PTdays.friday += 1;\n          break;\n\n        case \"Saturday\":\n          this.PTdays.saturday += 1;\n          break;\n\n        default:\n          break;\n      }\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyCA;AACA;AACAA;AAAA;AACAC,iBADA;AAEAC;AACAC,iBADA;AAEAC,iBAFA;AAGAC,kBAHA;AAIAC,oBAJA;AAKAC,mBALA;AAMAC,iBANA;AAOAC;AAPA,OAFA;AAWAC,mBAXA;AAYAC;AACAR,iBADA;AAEAC,iBAFA;AAGAC,kBAHA;AAIAC,oBAJA;AAKAC,mBALA;AAMAC,iBANA;AAOAC;AAPA;AAZA;AAAA,GADA;AAuBAG;AACAC;AACA,GAzBA;AA0BAC;AACA;AACA;AACA;AACAC,eAJA,uBAIAd,KAJA,EAIA;AACA;AACA;AACA,KAPA;AAQAe,aARA,qBAQAf,KARA,EAQA;AAAA;;AACAA;AACA;AACA;;AACA;AACA;AACA,OALA;AAMAY;AACA,KAhBA;AAiBAI,YAjBA,sBAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAzBA;AA0BAC,aA1BA,qBA0BAC,GA1BA,EA0BA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AAvBA;AAyBA,KApDA;;AAqDA;AACA;AACA;AACAC,iBAxDA,yBAwDAnB,KAxDA,EAwDA;AACA;AACA;AACA,KA3DA;AA4DAoB,eA5DA,uBA4DApB,KA5DA,EA4DA;AAAA;;AACAA;AACA;AACA;;AACA;AACA;AACA,OALA;AAMAY;AACA,KApEA;AAqEAS,cArEA,wBAqEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KA7EA;AA8EAC,eA9EA,uBA8EAJ,GA9EA,EA8EA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AAvBA;AAyBA;AAxGA;AA1BA","names":["data","dates","days","sunday","monday","tuesday","wednesday","thursday","friday","saturday","datesPT","PTdays","mounted","console","methods","updateDates","countDays","prepDays","addToDays","day","updatePTDates","countPTDays","prepPTDays","addToPTDays"],"sourceRoot":"src/components","sources":["CleaningHours.vue"],"sourcesContent":["<template>\n  <v-container>\n    <v-sheet outlined>\n      <v-toolbar dense dark color=\"primary\">\n        <v-toolbar-title> Cleaning Hours </v-toolbar-title>\n      </v-toolbar>\n\n      <v-date-picker\n        v-model=\"dates\"\n        multiple\n        elevation=\"5\"\n        no-title\n        @input=\"updateDates\"\n      >\n      </v-date-picker>\n      <p v-if=\"days.sunday != 0\">Sunday {{ days.sunday }}</p>\n      <p v-if=\"days.monday != 0\">Monday {{ days.monday }}</p>\n      <p v-if=\"days.tuesday != 0\">Tuesday {{ days.tuesday }}</p>\n      <p v-if=\"days.wednesday != 0\">Wednesday {{ days.wednesday }}</p>\n      <p v-if=\"days.thursday != 0\">Thursday {{ days.thursday }}</p>\n      <p v-if=\"days.friday != 0\">Friday {{ days.friday }}</p>\n      <p v-if=\"days.saturday != 0\">Saturday {{ days.saturday }}</p>\n    </v-sheet>\n    <v-sheet outlined>\n      <v-toolbar dense dark color=\"primary\">\n        <v-toolbar-title> Cleaning Hours PT </v-toolbar-title>\n      </v-toolbar>\n\n      <v-date-picker\n        v-model=\"datesPT\"\n        multiple\n        elevation=\"5\"\n        no-title\n        @input=\"updatePTDates\"\n      >\n      </v-date-picker>\n    </v-sheet>\n  </v-container>\n</template>\n\n<script>\nimport moment from \"moment\";\nexport default {\n  data: () => ({\n    dates: [\"\"],\n    days: {\n      sunday: 0,\n      monday: 0,\n      tuesday: 0,\n      wednesday: 0,\n      thursday: 0,\n      friday: 0,\n      saturday: 0,\n    },\n    datesPT: [\"\"],\n    PTdays: {\n      sunday: 0,\n      monday: 0,\n      tuesday: 0,\n      wednesday: 0,\n      thursday: 0,\n      friday: 0,\n      saturday: 0,\n    }\n  }),\n  mounted: () => {\n    console.log(\"mounted\");\n  },\n  methods: {\n    /**\n     * Regular days methods\n     */\n    updateDates(dates) {\n      this.prepDays();\n      this.countDays(dates);\n    },\n    countDays(dates) {\n      dates.forEach((date) => {\n        if (date != \"\") {\n          let day = moment(date).format(\"dddd\");\n          this.addToDays(day)\n        }\n      });\n      console.log(this.days);\n    },\n    prepDays() {\n      this.days.sunday = 0;\n      this.days.monday = 0;\n      this.days.tuesday = 0;\n      this.days.wednesday = 0;\n      this.days.thursday = 0;\n      this.days.friday = 0;\n      this.days.saturday = 0;\n    },\n    addToDays(day) {\n      switch (day) {\n        case \"Sunday\":\n          this.days.sunday += 1;\n          break;\n        case \"Monday\":\n          this.days.monday += 1;\n          break;\n        case \"Tuesday\":\n          this.days.tuesday += 1;\n          break;\n        case \"Wednesday\":\n          this.days.wednesday += 1;\n          break;\n        case \"Thursday\":\n          this.days.thursday += 1;\n          break;\n        case \"Friday\":\n          this.days.friday += 1;\n          break;\n        case \"Saturday\":\n          this.days.saturday += 1;\n          break;\n        default:\n          break;\n      }\n    },\n    /**\n     * PT days methods\n     */\n    updatePTDates(dates) {\n      this.prepPTDays();\n      this.countPTDays(dates);\n    },\n    countPTDays(dates) {\n      dates.forEach((date) => {\n        if (date != \"\") {\n          let day = moment(date).format(\"dddd\");\n          this.addToPTDays(day)\n        }\n      });\n      console.log(this.days);\n    },\n    prepPTDays() {\n      this.PTdays.sunday = 0;\n      this.PTdays.monday = 0;\n      this.PTdays.tuesday = 0;\n      this.PTdays.wednesday = 0;\n      this.PTdays.thursday = 0;\n      this.PTdays.friday = 0;\n      this.PTdays.saturday = 0;\n    },\n    addToPTDays(day) {\n      switch (day) {\n        case \"Sunday\":\n          this.PTdays.sunday += 1;\n          break;\n        case \"Monday\":\n          this.PTdays.monday += 1;\n          break;\n        case \"Tuesday\":\n          this.PTdays.tuesday += 1;\n          break;\n        case \"Wednesday\":\n          this.PTdays.wednesday += 1;\n          break;\n        case \"Thursday\":\n          this.PTdays.thursday += 1;\n          break;\n        case \"Friday\":\n          this.PTdays.friday += 1;\n          break;\n        case \"Saturday\":\n          this.PTdays.saturday += 1;\n          break;\n        default:\n          break;\n      }\n    },\n    \n  },\n};\n</script>"]},"metadata":{},"sourceType":"module"}