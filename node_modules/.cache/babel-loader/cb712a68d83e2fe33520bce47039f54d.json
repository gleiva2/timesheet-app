{"ast":null,"code":"import \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.test.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport moment from \"moment\";\nexport default {\n  data: function data() {\n    return {\n      dateChange: null,\n      dates: [\"\"],\n      days: {\n        sunday: 0,\n        monday: 0,\n        tuesday: 0,\n        wednesday: 0,\n        thursday: 0,\n        friday: 0,\n        saturday: 0\n      },\n      regRate: 100,\n      dateChangePT: null,\n      datesPT: [\"\"],\n      PTdays: {\n        sunday: 0,\n        monday: 0,\n        tuesday: 0,\n        wednesday: 0,\n        thursday: 0,\n        friday: 0,\n        saturday: 0\n      },\n      ptRate: 50\n    };\n  },\n  mounted: function mounted() {},\n  watch: {\n    /**\n     * Cleaning Hours\n     */\n    dateChange: function dateChange(newval) {\n      // here you can check if month changed using newval and oldval\n      // this.dates = [\"\"];\n      // this.days = {\n      //   sunday: 0,\n      //   monday: 0,\n      //   tuesday: 0,\n      //   wednesday: 0,\n      //   thursday: 0,\n      //   friday: 0,\n      //   saturday: 0,\n      // };\n      // console.log(\"new: \" + newval);\n      //console.log(\"old: \" + oldval);\n      this.test(newval);\n    },\n\n    /**\n     * Cleaning Hours PT\n     */\n    dateChangePT: function dateChangePT(newval) {\n      // here you can check if month changed using newval and oldval\n      // this.dates = [\"\"];\n      // this.days = {\n      //   sunday: 0,\n      //   monday: 0,\n      //   tuesday: 0,\n      //   wednesday: 0,\n      //   thursday: 0,\n      //   friday: 0,\n      //   saturday: 0,\n      // };\n      // console.log(\"new: \" + newval);\n      //console.log(\"old: \" + oldval);\n      this.test(newval);\n    }\n  },\n  methods: {\n    test: function test(date) {\n      console.log(\"EVENT!: \" + date);\n    },\n\n    /**\n     * Regular days methods\n     */\n    updateDates: function updateDates(dates) {\n      this.prepDays();\n      this.countDays(dates);\n    },\n    countDays: function countDays(dates) {\n      var _this = this;\n\n      dates.forEach(function (date) {\n        if (date != \"\") {\n          var day = moment(date).format(\"dddd\");\n\n          _this.addToDays(day);\n        }\n      });\n    },\n    prepDays: function prepDays() {\n      this.days.sunday = 0;\n      this.days.monday = 0;\n      this.days.tuesday = 0;\n      this.days.wednesday = 0;\n      this.days.thursday = 0;\n      this.days.friday = 0;\n      this.days.saturday = 0;\n    },\n    addToDays: function addToDays(day) {\n      switch (day) {\n        case \"Sunday\":\n          this.days.sunday += 1;\n          break;\n\n        case \"Monday\":\n          this.days.monday += 1;\n          break;\n\n        case \"Tuesday\":\n          this.days.tuesday += 1;\n          break;\n\n        case \"Wednesday\":\n          this.days.wednesday += 1;\n          break;\n\n        case \"Thursday\":\n          this.days.thursday += 1;\n          break;\n\n        case \"Friday\":\n          this.days.friday += 1;\n          break;\n\n        case \"Saturday\":\n          this.days.saturday += 1;\n          break;\n\n        default:\n          break;\n      }\n    },\n\n    /**\n     * PT days methods\n     */\n    updatePTDates: function updatePTDates(dates) {\n      this.prepPTDays();\n      this.countPTDays(dates);\n    },\n    countPTDays: function countPTDays(dates) {\n      var _this2 = this;\n\n      dates.forEach(function (date) {\n        if (date != \"\") {\n          var day = moment(date).format(\"dddd\");\n\n          _this2.addToPTDays(day);\n        }\n      });\n    },\n    prepPTDays: function prepPTDays() {\n      this.PTdays.sunday = 0;\n      this.PTdays.monday = 0;\n      this.PTdays.tuesday = 0;\n      this.PTdays.wednesday = 0;\n      this.PTdays.thursday = 0;\n      this.PTdays.friday = 0;\n      this.PTdays.saturday = 0;\n    },\n    addToPTDays: function addToPTDays(day) {\n      switch (day) {\n        case \"Sunday\":\n          this.PTdays.sunday += 1;\n          break;\n\n        case \"Monday\":\n          this.PTdays.monday += 1;\n          break;\n\n        case \"Tuesday\":\n          this.PTdays.tuesday += 1;\n          break;\n\n        case \"Wednesday\":\n          this.PTdays.wednesday += 1;\n          break;\n\n        case \"Thursday\":\n          this.PTdays.thursday += 1;\n          break;\n\n        case \"Friday\":\n          this.PTdays.friday += 1;\n          break;\n\n        case \"Saturday\":\n          this.PTdays.saturday += 1;\n          break;\n\n        default:\n          break;\n      }\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkHA;AACA;AACAA;AAAA;AACAC,sBADA;AAEAC,iBAFA;AAGAC;AACAC,iBADA;AAEAC,iBAFA;AAGAC,kBAHA;AAIAC,oBAJA;AAKAC,mBALA;AAMAC,iBANA;AAOAC;AAPA,OAHA;AAYAC,kBAZA;AAcAC,wBAdA;AAeAC,mBAfA;AAgBAC;AACAV,iBADA;AAEAC,iBAFA;AAGAC,kBAHA;AAIAC,oBAJA;AAKAC,mBALA;AAMAC,iBANA;AAOAC;AAPA,OAhBA;AAyBAK;AAzBA;AAAA,GADA;AA4BAC,gCA5BA;AA6BAC;AACA;AACA;AACA;AACAhB,cAJA,sBAIAiB,MAJA,EAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAnBA;;AAoBA;AACA;AACA;AACAN,gBAvBA,wBAuBAM,MAvBA,EAuBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAtCA,GA7BA;AAqEAC;AACAC,QADA,gBACAC,IADA,EACA;AACAC;AACA,KAHA;;AAIA;AACA;AACA;AACAC,eAPA,uBAOArB,KAPA,EAOA;AACA;AACA;AACA,KAVA;AAWAsB,aAXA,qBAWAtB,KAXA,EAWA;AAAA;;AACAA;AACA;AACA;;AACA;AACA;AACA,OALA;AAMA,KAlBA;AAmBAuB,YAnBA,sBAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KA3BA;AA4BAC,aA5BA,qBA4BAC,GA5BA,EA4BA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AAvBA;AAyBA,KAtDA;;AAuDA;AACA;AACA;AACAC,iBA1DA,yBA0DA1B,KA1DA,EA0DA;AACA;AACA;AACA,KA7DA;AA8DA2B,eA9DA,uBA8DA3B,KA9DA,EA8DA;AAAA;;AACAA;AACA;AACA;;AACA;AACA;AACA,OALA;AAMA,KArEA;AAsEA4B,cAtEA,wBAsEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KA9EA;AA+EAC,eA/EA,uBA+EAJ,GA/EA,EA+EA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AAvBA;AAyBA;AAzGA;AArEA","names":["data","dateChange","dates","days","sunday","monday","tuesday","wednesday","thursday","friday","saturday","regRate","dateChangePT","datesPT","PTdays","ptRate","mounted","watch","newval","methods","test","date","console","updateDates","countDays","prepDays","addToDays","day","updatePTDates","countPTDays","prepPTDays","addToPTDays"],"sourceRoot":"src/components","sources":["CleaningHours.vue"],"sourcesContent":["<template>\n  <v-container class=\"grey lighten-5\">\n    <v-sheet outlined>\n      <v-toolbar dense dark color=\"primary\">\n        <v-toolbar-title> Cleaning Hours </v-toolbar-title>\n      </v-toolbar>\n\n      <v-date-picker\n        v-model=\"dates\"\n        reactive\n        multiple\n        elevation=\"5\"\n        no-title\n        @input=\"updateDates\"\n        :picker-date.sync=\"dateChange\"\n      >\n      </v-date-picker>\n      <p v-if=\"days.sunday != 0\">\n        Sunday: {{ days.sunday }} x {{ regRate }} = {{ days.sunday * regRate }}\n      </p>\n      <p v-if=\"days.monday != 0\">\n        Monday: {{ days.monday }} x {{ regRate }} = {{ days.monday * regRate }}\n      </p>\n      <p v-if=\"days.tuesday != 0\">\n        Tuesday: {{ days.tuesday }} x {{ regRate }} =\n        {{ days.tuesday * regRate }}\n      </p>\n      <p v-if=\"days.wednesday != 0\">\n        Wednesday: {{ days.wednesday }} x {{ regRate }} =\n        {{ days.wednesday * regRate }}\n      </p>\n      <p v-if=\"days.thursday != 0\">\n        Thursday: {{ days.thursday }} x {{ regRate }} =\n        {{ days.thursday * regRate }}\n      </p>\n      <p v-if=\"days.friday != 0\">\n        Friday: {{ days.friday }} x {{ regRate }} = {{ days.friday * regRate }}\n      </p>\n      <p v-if=\"days.saturday != 0\">\n        Saturday: {{ days.saturday }} x {{ regRate }} =\n        {{ days.saturday * regRate }}\n      </p>\n      <p>\n        Total:\n        {{\n          days.sunday * regRate +\n          days.monday * regRate +\n          days.tuesday * regRate +\n          days.wednesday * regRate +\n          days.thursday * regRate +\n          days.friday * regRate +\n          days.saturday * regRate\n        }}\n      </p>\n    </v-sheet>\n    <v-sheet outlined>\n      <v-toolbar dense dark color=\"primary\">\n        <v-toolbar-title> Cleaning Hours PT </v-toolbar-title>\n      </v-toolbar>\n\n      <v-date-picker\n        v-model=\"datesPT\"\n        multiple\n        elevation=\"5\"\n        no-title\n        @input=\"updatePTDates\"\n        :picker-date.sync=\"dateChangePT\"\n      >\n      </v-date-picker>\n      <p v-if=\"PTdays.sunday != 0\">\n        Sunday: {{ PTdays.sunday }} x {{ ptRate }} =\n        {{ PTdays.sunday * ptRate }}\n      </p>\n      <p v-if=\"PTdays.monday != 0\">\n        Monday: {{ PTdays.monday }} x {{ ptRate }} =\n        {{ PTdays.monday * ptRate }}\n      </p>\n      <p v-if=\"PTdays.tuesday != 0\">\n        Tuesday: {{ PTdays.tuesday }} x {{ ptRate }} =\n        {{ PTdays.tuesday * ptRate }}\n      </p>\n      <p v-if=\"PTdays.wednesday != 0\">\n        Wednesday: {{ PTdays.wednesday }} x {{ ptRate }} =\n        {{ PTdays.wednesday * ptRate }}\n      </p>\n      <p v-if=\"PTdays.thursday != 0\">\n        Thursday: {{ PTdays.thursday }} x {{ ptRate }} =\n        {{ PTdays.thursday * ptRate }}\n      </p>\n      <p v-if=\"PTdays.friday != 0\">\n        Friday: {{ PTdays.friday }} x {{ ptRate }} =\n        {{ PTdays.friday * ptRate }}\n      </p>\n      <p v-if=\"PTdays.saturday != 0\">\n        Saturday: {{ PTdays.saturday }} x {{ ptRate }} =\n        {{ PTdays.saturday * ptRate }}\n      </p>\n      <p>\n        Total:\n        {{\n          PTdays.sunday * ptRate +\n          PTdays.monday * ptRate +\n          PTdays.tuesday * ptRate +\n          PTdays.wednesday * ptRate +\n          PTdays.thursday * ptRate +\n          PTdays.friday * ptRate +\n          PTdays.saturday * ptRate\n        }}\n      </p>\n    </v-sheet>\n  </v-container>\n</template>\n\n<script>\nimport moment from \"moment\";\nexport default {\n  data: () => ({\n    dateChange: null,\n    dates: [\"\"],\n    days: {\n      sunday: 0,\n      monday: 0,\n      tuesday: 0,\n      wednesday: 0,\n      thursday: 0,\n      friday: 0,\n      saturday: 0,\n    },\n    regRate: 100,\n\n    dateChangePT: null,\n    datesPT: [\"\"],\n    PTdays: {\n      sunday: 0,\n      monday: 0,\n      tuesday: 0,\n      wednesday: 0,\n      thursday: 0,\n      friday: 0,\n      saturday: 0,\n    },\n    ptRate: 50,\n  }),\n  mounted: () => {},\n  watch: {\n    /**\n     * Cleaning Hours\n     */\n    dateChange(newval) {\n      // here you can check if month changed using newval and oldval\n      // this.dates = [\"\"];\n      // this.days = {\n      //   sunday: 0,\n      //   monday: 0,\n      //   tuesday: 0,\n      //   wednesday: 0,\n      //   thursday: 0,\n      //   friday: 0,\n      //   saturday: 0,\n      // };\n      // console.log(\"new: \" + newval);\n      //console.log(\"old: \" + oldval);\n      this.test(newval)\n    },\n    /**\n     * Cleaning Hours PT\n     */\n    dateChangePT(newval) {\n      // here you can check if month changed using newval and oldval\n      // this.dates = [\"\"];\n      // this.days = {\n      //   sunday: 0,\n      //   monday: 0,\n      //   tuesday: 0,\n      //   wednesday: 0,\n      //   thursday: 0,\n      //   friday: 0,\n      //   saturday: 0,\n      // };\n      // console.log(\"new: \" + newval);\n      //console.log(\"old: \" + oldval);\n      this.test(newval)\n    },\n  },\n  methods: {\n    test(date) {\n      console.log(\"EVENT!: \" + date);\n    },\n    /**\n     * Regular days methods\n     */\n    updateDates(dates) {\n      this.prepDays();\n      this.countDays(dates);\n    },\n    countDays(dates) {\n      dates.forEach((date) => {\n        if (date != \"\") {\n          let day = moment(date).format(\"dddd\");\n          this.addToDays(day);\n        }\n      });\n    },\n    prepDays() {\n      this.days.sunday = 0;\n      this.days.monday = 0;\n      this.days.tuesday = 0;\n      this.days.wednesday = 0;\n      this.days.thursday = 0;\n      this.days.friday = 0;\n      this.days.saturday = 0;\n    },\n    addToDays(day) {\n      switch (day) {\n        case \"Sunday\":\n          this.days.sunday += 1;\n          break;\n        case \"Monday\":\n          this.days.monday += 1;\n          break;\n        case \"Tuesday\":\n          this.days.tuesday += 1;\n          break;\n        case \"Wednesday\":\n          this.days.wednesday += 1;\n          break;\n        case \"Thursday\":\n          this.days.thursday += 1;\n          break;\n        case \"Friday\":\n          this.days.friday += 1;\n          break;\n        case \"Saturday\":\n          this.days.saturday += 1;\n          break;\n        default:\n          break;\n      }\n    },\n    /**\n     * PT days methods\n     */\n    updatePTDates(dates) {\n      this.prepPTDays();\n      this.countPTDays(dates);\n    },\n    countPTDays(dates) {\n      dates.forEach((date) => {\n        if (date != \"\") {\n          let day = moment(date).format(\"dddd\");\n          this.addToPTDays(day);\n        }\n      });\n    },\n    prepPTDays() {\n      this.PTdays.sunday = 0;\n      this.PTdays.monday = 0;\n      this.PTdays.tuesday = 0;\n      this.PTdays.wednesday = 0;\n      this.PTdays.thursday = 0;\n      this.PTdays.friday = 0;\n      this.PTdays.saturday = 0;\n    },\n    addToPTDays(day) {\n      switch (day) {\n        case \"Sunday\":\n          this.PTdays.sunday += 1;\n          break;\n        case \"Monday\":\n          this.PTdays.monday += 1;\n          break;\n        case \"Tuesday\":\n          this.PTdays.tuesday += 1;\n          break;\n        case \"Wednesday\":\n          this.PTdays.wednesday += 1;\n          break;\n        case \"Thursday\":\n          this.PTdays.thursday += 1;\n          break;\n        case \"Friday\":\n          this.PTdays.friday += 1;\n          break;\n        case \"Saturday\":\n          this.PTdays.saturday += 1;\n          break;\n        default:\n          break;\n      }\n    },\n  },\n};\n</script>"]},"metadata":{},"sourceType":"module"}