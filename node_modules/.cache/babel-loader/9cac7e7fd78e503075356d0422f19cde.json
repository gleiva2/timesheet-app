{"ast":null,"code":"import Vue from 'vue';\nimport createAuth0Client from '@auth0/auth0-spa-js';\n/** Define a default action to perform after authentication */\n\nconst DEFAULT_REDIRECT_CALLBACK = () => window.history.replaceState({}, document.title, window.location.pathname);\n\nlet instance;\n/** Returns the current instance of the SDK */\n\nexport const getInstance = () => instance;\n/** Creates an instance of the Auth0 SDK. If one has already been created, it returns that instance */\n\nexport const useAuth0 = ({\n  onRedirectCallback = DEFAULT_REDIRECT_CALLBACK,\n  redirectUri = `${window.location.origin}/timesheet-app/`,\n  ...options\n}) => {\n  if (instance) return instance; // The 'instance' is simply a Vue object\n\n  instance = new Vue({\n    data() {\n      return {\n        loading: true,\n        isAuthenticated: false,\n        user: {},\n        auth0Client: null,\n        popupOpen: false,\n        error: null\n      };\n    },\n\n    methods: {\n      /** Authenticates the user using a popup window */\n      async loginWithPopup(options, config) {\n        this.popupOpen = true;\n\n        try {\n          await this.auth0Client.loginWithPopup(options, config);\n          this.user = await this.auth0Client.getUser();\n          this.isAuthenticated = await this.auth0Client.isAuthenticated();\n          this.error = null;\n        } catch (e) {\n          this.error = e; // eslint-disable-next-line\n\n          console.error(e);\n        } finally {\n          this.popupOpen = false;\n        }\n\n        this.user = await this.auth0Client.getUser();\n        this.isAuthenticated = true;\n      },\n\n      /** Handles the callback when logging in using a redirect */\n      async handleRedirectCallback() {\n        this.loading = true;\n\n        try {\n          await this.auth0Client.handleRedirectCallback();\n          this.user = await this.auth0Client.getUser();\n          this.isAuthenticated = true;\n          this.error = null;\n        } catch (e) {\n          this.error = e;\n        } finally {\n          this.loading = false;\n        }\n      },\n\n      /** Authenticates the user using the redirect method */\n      loginWithRedirect(o) {\n        return this.auth0Client.loginWithRedirect(o);\n      },\n\n      /** Returns all the claims present in the ID token */\n      getIdTokenClaims(o) {\n        return this.auth0Client.getIdTokenClaims(o);\n      },\n\n      /** Returns the access token. If the token is invalid or missing, a new one is retrieved */\n      getTokenSilently(o) {\n        return this.auth0Client.getTokenSilently(o);\n      },\n\n      /** Gets the access token using a popup window */\n      getTokenWithPopup(o) {\n        return this.auth0Client.getTokenWithPopup(o);\n      },\n\n      /** Logs the user out and removes their session on the authorization server */\n      logout(o) {\n        return this.auth0Client.logout(o);\n      }\n\n    },\n\n    /** Use this lifecycle method to instantiate the SDK client */\n    async created() {\n      // Create a new instance of the SDK client using members of the given options object\n      this.auth0Client = await createAuth0Client({ ...options,\n        client_id: options.clientId,\n        redirect_uri: redirectUri\n      });\n\n      try {\n        // If the user is returning to the app after authentication..\n        if (window.location.search.includes('code=') && window.location.search.includes('state=')) {\n          // handle the redirect and retrieve tokens\n          const {\n            appState\n          } = await this.auth0Client.handleRedirectCallback();\n          this.error = null; // Notify subscribers that the redirect callback has happened, passing the appState\n          // (useful for retrieving any pre-authentication state)\n\n          onRedirectCallback(appState);\n        }\n      } catch (e) {\n        this.error = e;\n      } finally {\n        // Initialize our internal authentication state\n        this.isAuthenticated = await this.auth0Client.isAuthenticated();\n        this.user = await this.auth0Client.getUser();\n        this.loading = false;\n      }\n    }\n\n  });\n  return instance;\n}; // Create a simple Vue plugin to expose the wrapper object throughout the application\n\nexport const Auth0Plugin = {\n  install(Vue, options) {\n    Vue.prototype.$auth = useAuth0(options);\n  }\n\n};","map":{"version":3,"sources":["/home/gerson/Documents/node-tutorials/timesheet-app/client/src/auth/index.js"],"names":["Vue","createAuth0Client","DEFAULT_REDIRECT_CALLBACK","window","history","replaceState","document","title","location","pathname","instance","getInstance","useAuth0","onRedirectCallback","redirectUri","origin","options","data","loading","isAuthenticated","user","auth0Client","popupOpen","error","methods","loginWithPopup","config","getUser","e","console","handleRedirectCallback","loginWithRedirect","o","getIdTokenClaims","getTokenSilently","getTokenWithPopup","logout","created","client_id","clientId","redirect_uri","search","includes","appState","Auth0Plugin","install","prototype","$auth"],"mappings":"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","sourcesContent":["import Vue from 'vue';\nimport createAuth0Client from '@auth0/auth0-spa-js';\n\n/** Define a default action to perform after authentication */\nconst DEFAULT_REDIRECT_CALLBACK = () =>\n  window.history.replaceState({}, document.title, window.location.pathname);\n\nlet instance;\n\n/** Returns the current instance of the SDK */\nexport const getInstance = () => instance;\n\n/** Creates an instance of the Auth0 SDK. If one has already been created, it returns that instance */\nexport const useAuth0 = ({\n  onRedirectCallback = DEFAULT_REDIRECT_CALLBACK,\n  redirectUri = `${window.location.origin}/timesheet-app/`,\n  ...options\n}) => {\n  if (instance) return instance;\n\n  // The 'instance' is simply a Vue object\n  instance = new Vue({\n    data() {\n      return {\n        loading: true,\n        isAuthenticated: false,\n        user: {},\n        auth0Client: null,\n        popupOpen: false,\n        error: null\n      };\n    },\n    methods: {\n      /** Authenticates the user using a popup window */\n      async loginWithPopup(options, config) {\n        this.popupOpen = true;\n\n        try {\n          await this.auth0Client.loginWithPopup(options, config);\n          this.user = await this.auth0Client.getUser();\n          this.isAuthenticated = await this.auth0Client.isAuthenticated();\n          this.error = null;\n        } catch (e) {\n          this.error = e;\n          // eslint-disable-next-line\n          console.error(e);\n        } finally {\n          this.popupOpen = false;\n        }\n\n        this.user = await this.auth0Client.getUser();\n        this.isAuthenticated = true;\n      },\n      /** Handles the callback when logging in using a redirect */\n      async handleRedirectCallback() {\n        this.loading = true;\n        try {\n          await this.auth0Client.handleRedirectCallback();\n          this.user = await this.auth0Client.getUser();\n          this.isAuthenticated = true;\n          this.error = null;\n        } catch (e) {\n          this.error = e;\n        } finally {\n          this.loading = false;\n        }\n      },\n      /** Authenticates the user using the redirect method */\n      loginWithRedirect(o) {\n        return this.auth0Client.loginWithRedirect(o);\n      },\n      /** Returns all the claims present in the ID token */\n      getIdTokenClaims(o) {\n        return this.auth0Client.getIdTokenClaims(o);\n      },\n      /** Returns the access token. If the token is invalid or missing, a new one is retrieved */\n      getTokenSilently(o) {\n        return this.auth0Client.getTokenSilently(o);\n      },\n      /** Gets the access token using a popup window */\n\n      getTokenWithPopup(o) {\n        return this.auth0Client.getTokenWithPopup(o);\n      },\n      /** Logs the user out and removes their session on the authorization server */\n      logout(o) {\n        return this.auth0Client.logout(o);\n      }\n    },\n    /** Use this lifecycle method to instantiate the SDK client */\n    async created() {\n      // Create a new instance of the SDK client using members of the given options object\n      this.auth0Client = await createAuth0Client({\n        ...options,\n        client_id: options.clientId,\n        redirect_uri: redirectUri\n      });\n\n      try {\n        // If the user is returning to the app after authentication..\n        if (\n          window.location.search.includes('code=') &&\n          window.location.search.includes('state=')\n        ) {\n          // handle the redirect and retrieve tokens\n          const { appState } = await this.auth0Client.handleRedirectCallback();\n\n          this.error = null;\n\n          // Notify subscribers that the redirect callback has happened, passing the appState\n          // (useful for retrieving any pre-authentication state)\n          onRedirectCallback(appState);\n        }\n      } catch (e) {\n        this.error = e;\n      } finally {\n        // Initialize our internal authentication state\n        this.isAuthenticated = await this.auth0Client.isAuthenticated();\n        this.user = await this.auth0Client.getUser();\n        this.loading = false;\n      }\n    }\n  });\n\n  return instance;\n};\n\n// Create a simple Vue plugin to expose the wrapper object throughout the application\nexport const Auth0Plugin = {\n  install(Vue, options) {\n    Vue.prototype.$auth = useAuth0(options);\n  }\n};"]},"metadata":{},"sourceType":"module"}