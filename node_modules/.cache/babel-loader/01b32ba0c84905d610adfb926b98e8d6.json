{"ast":null,"code":"import \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport moment from \"moment\";\nimport axios from \"axios\";\nexport default {\n  data: function data() {\n    return {\n      baseUrl: \"http://localhost:3000/timesheet\",\n      monthChange: null,\n      month: \"\",\n      dates: [\"\"],\n      days: {\n        sunday: 0,\n        monday: 0,\n        tuesday: 0,\n        wednesday: 0,\n        thursday: 0,\n        friday: 0,\n        saturday: 0\n      },\n      rate: 100,\n      monthObject: null,\n      ptMonthChange: null,\n      ptMonth: \"\",\n      ptDates: [\"\"],\n      ptDays: {\n        sunday: 0,\n        monday: 0,\n        tuesday: 0,\n        wednesday: 0,\n        thursday: 0,\n        friday: 0,\n        saturday: 0\n      },\n      ptRate: 50,\n      ptMonthObject: null\n    };\n  },\n  mounted: function mounted() {// this.getTimesheet(\"reg\", \"2022-04\");\n  },\n  watch: {\n    /**\n     * Cleaning Hours\n     */\n    monthChange: function monthChange(yearMonth) {\n      this.month = yearMonth;\n      this.getTimesheet(\"reg\", yearMonth);\n    },\n\n    /**\n     * Cleaning Hours PT\n     */\n    ptMonthChange: function ptMonthChange(yearMonth) {\n      this.ptMonth = yearMonth;\n      this.getTimesheet(\"reg\", yearMonth);\n    }\n  },\n  methods: {\n    getTimesheet: function getTimesheet(type, month) {\n      var _this = this;\n\n      axios.get(\"\".concat(this.baseUrl, \"/\").concat(type, \"/\").concat(month)).then(function (res) {\n        if (res.data.length != 0) {\n          if (type === \"reg\") {\n            _this.monthObject = res.data;\n          } else {\n            _this.ptMonthObject = res.data;\n          }\n        }\n\n        console.log(\"month: \" + _this.monthObject);\n        console.log(\"ptmonth: \" + _this.ptMonthObject);\n      });\n    },\n    createTimesheet: function createTimesheet(type, month) {\n      var _this2 = this;\n\n      var dates;\n      var days;\n\n      if (type === \"reg\") {\n        dates = this.dates;\n        days = this.days;\n      } else {\n        dates = this.ptDates;\n        days = this.ptDays;\n      }\n\n      axios.post(this.baseUrl, {\n        name: type,\n        yearMonth: month,\n        dates: dates,\n        days: days\n      }).then(function (res) {\n        if (type === \"reg\") {\n          _this2.monthObject = res.data;\n        } else {\n          _this2.ptMonthObject = res.data;\n        }\n      });\n    },\n\n    /**\n     * Regular days methods\n     */\n    updateDates: function updateDates(dates) {\n      this.prepDays();\n      this.countDays(dates); // if we have data, then call patch\n\n      if (this.monthObject) {\n        console.log(\"patching\");\n      } else {\n        // if not then post\n        console.log(\"posting\");\n        this.createTimesheet(\"reg\", this.month);\n      }\n    },\n    prepDays: function prepDays() {\n      this.days = {\n        sunday: 0,\n        monday: 0,\n        tuesday: 0,\n        wednesday: 0,\n        thursday: 0,\n        friday: 0,\n        saturday: 0\n      };\n    },\n    countDays: function countDays(dates) {\n      var _this3 = this;\n\n      dates.forEach(function (date) {\n        if (date != \"\") {\n          var day = moment(date).format(\"dddd\");\n\n          _this3.addToDays(day);\n        }\n      });\n    },\n    addToDays: function addToDays(day) {\n      switch (day) {\n        case \"Sunday\":\n          this.days.sunday += 1;\n          break;\n\n        case \"Monday\":\n          this.days.monday += 1;\n          break;\n\n        case \"Tuesday\":\n          this.days.tuesday += 1;\n          break;\n\n        case \"Wednesday\":\n          this.days.wednesday += 1;\n          break;\n\n        case \"Thursday\":\n          this.days.thursday += 1;\n          break;\n\n        case \"Friday\":\n          this.days.friday += 1;\n          break;\n\n        case \"Saturday\":\n          this.days.saturday += 1;\n          break;\n\n        default:\n          break;\n      }\n    },\n\n    /**\n     * PT days methods\n     */\n    updatePTDates: function updatePTDates(dates) {\n      this.prepPTDays();\n      this.countPTDays(dates);\n    },\n    prepPTDays: function prepPTDays() {\n      this.ptDays = {\n        sunday: 0,\n        monday: 0,\n        tuesday: 0,\n        wednesday: 0,\n        thursday: 0,\n        friday: 0,\n        saturday: 0\n      };\n    },\n    countPTDays: function countPTDays(dates) {\n      var _this4 = this;\n\n      dates.forEach(function (date) {\n        if (date != \"\") {\n          var day = moment(date).format(\"dddd\");\n\n          _this4.addToPTDays(day);\n        }\n      });\n    },\n    addToPTDays: function addToPTDays(day) {\n      switch (day) {\n        case \"Sunday\":\n          this.ptDays.sunday += 1;\n          break;\n\n        case \"Monday\":\n          this.ptDays.monday += 1;\n          break;\n\n        case \"Tuesday\":\n          this.ptDays.tuesday += 1;\n          break;\n\n        case \"Wednesday\":\n          this.ptDays.wednesday += 1;\n          break;\n\n        case \"Thursday\":\n          this.ptDays.thursday += 1;\n          break;\n\n        case \"Friday\":\n          this.ptDays.friday += 1;\n          break;\n\n        case \"Saturday\":\n          this.ptDays.saturday += 1;\n          break;\n\n        default:\n          break;\n      }\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkHA;AACA;AAEA;AACAA;AAAA;AACAC,gDADA;AAGAC,uBAHA;AAIAC,eAJA;AAKAC,iBALA;AAMAC;AACAC,iBADA;AAEAC,iBAFA;AAGAC,kBAHA;AAIAC,oBAJA;AAKAC,mBALA;AAMAC,iBANA;AAOAC;AAPA,OANA;AAeAC,eAfA;AAgBAC,uBAhBA;AAkBAC,yBAlBA;AAmBAC,iBAnBA;AAoBAC,mBApBA;AAqBAC;AACAZ,iBADA;AAEAC,iBAFA;AAGAC,kBAHA;AAIAC,oBAJA;AAKAC,mBALA;AAMAC,iBANA;AAOAC;AAPA,OArBA;AA8BAO,gBA9BA;AA+BAC;AA/BA;AAAA,GADA;AAkCAC,SAlCA,qBAkCA,CACA;AACA,GApCA;AAqCAC;AACA;AACA;AACA;AACApB,eAJA,uBAIAqB,SAJA,EAIA;AACA;AACA;AACA,KAPA;;AAQA;AACA;AACA;AACAR,iBAXA,yBAWAQ,SAXA,EAWA;AACA;AACA;AACA;AAdA,GArCA;AAqDAC;AACAC,gBADA,wBACAC,IADA,EACAvB,KADA,EACA;AAAA;;AACAwB;AACA;AACA;AACA;AACA,WAFA,MAEA;AACA;AACA;AACA;;AACAC;AACAA;AACA,OAVA;AAWA,KAbA;AAcAC,mBAdA,2BAcAH,IAdA,EAcAvB,KAdA,EAcA;AAAA;;AACA;AACA;;AACA;AACAC;AACAC;AACA,OAHA,MAGA;AACAD;AACAC;AACA;;AAEAsB,YACAG,IADA,CACA,YADA,EACA;AACAC,kBADA;AAEAR,wBAFA;AAGAnB,oBAHA;AAIAC;AAJA,OADA,EAOA2B,IAPA,CAOA;AACA;AACA;AACA,SAFA,MAEA;AACA;AACA;AACA,OAbA;AAcA,KAvCA;;AAwCA;AACA;AACA;AACAC,eA3CA,uBA2CA7B,KA3CA,EA2CA;AACA;AACA,4BAFA,CAIA;;AACA;AACAwB;AACA,OAFA,MAEA;AACA;AACAA;AACA;AACA;AACA,KAvDA;AAwDAM,YAxDA,sBAwDA;AACA;AACA5B,iBADA;AAEAC,iBAFA;AAGAC,kBAHA;AAIAC,oBAJA;AAKAC,mBALA;AAMAC,iBANA;AAOAC;AAPA;AASA,KAlEA;AAmEAuB,aAnEA,qBAmEA/B,KAnEA,EAmEA;AAAA;;AACAA;AACA;AACA;;AACA;AACA;AACA,OALA;AAMA,KA1EA;AA2EAgC,aA3EA,qBA2EAC,GA3EA,EA2EA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AAvBA;AAyBA,KArGA;;AAsGA;AACA;AACA;AACAC,iBAzGA,yBAyGAlC,KAzGA,EAyGA;AACA;AACA;AACA,KA5GA;AA6GAmC,cA7GA,wBA6GA;AACA;AACAjC,iBADA;AAEAC,iBAFA;AAGAC,kBAHA;AAIAC,oBAJA;AAKAC,mBALA;AAMAC,iBANA;AAOAC;AAPA;AASA,KAvHA;AAwHA4B,eAxHA,uBAwHApC,KAxHA,EAwHA;AAAA;;AACAA;AACA;AACA;;AACA;AACA;AACA,OALA;AAMA,KA/HA;AAgIAqC,eAhIA,uBAgIAJ,GAhIA,EAgIA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AAvBA;AAyBA;AA1JA;AArDA","names":["data","baseUrl","monthChange","month","dates","days","sunday","monday","tuesday","wednesday","thursday","friday","saturday","rate","monthObject","ptMonthChange","ptMonth","ptDates","ptDays","ptRate","ptMonthObject","mounted","watch","yearMonth","methods","getTimesheet","type","axios","console","createTimesheet","post","name","then","updateDates","prepDays","countDays","addToDays","day","updatePTDates","prepPTDays","countPTDays","addToPTDays"],"sourceRoot":"src/components","sources":["CleaningHours.vue"],"sourcesContent":["<template>\n  <v-container>\n    <v-sheet>\n      <v-toolbar dense dark color=\"primary\">\n        <v-toolbar-title> Cleaning Hours </v-toolbar-title>\n      </v-toolbar>\n\n      <v-date-picker\n        v-model=\"dates\"\n        reactive\n        multiple\n        elevation=\"5\"\n        no-title\n        @input=\"updateDates\"\n        :picker-date.sync=\"monthChange\"\n      >\n      </v-date-picker>\n      <p v-if=\"days.sunday != 0\">\n        Sunday: {{ days.sunday }} x {{ rate }} = {{ days.sunday * rate }}\n      </p>\n      <p v-if=\"days.monday != 0\">\n        Monday: {{ days.monday }} x {{ rate }} = {{ days.monday * rate }}\n      </p>\n      <p v-if=\"days.tuesday != 0\">\n        Tuesday: {{ days.tuesday }} x {{ rate }} =\n        {{ days.tuesday * rate }}\n      </p>\n      <p v-if=\"days.wednesday != 0\">\n        Wednesday: {{ days.wednesday }} x {{ rate }} =\n        {{ days.wednesday * rate }}\n      </p>\n      <p v-if=\"days.thursday != 0\">\n        Thursday: {{ days.thursday }} x {{ rate }} =\n        {{ days.thursday * rate }}\n      </p>\n      <p v-if=\"days.friday != 0\">\n        Friday: {{ days.friday }} x {{ rate }} = {{ days.friday * rate }}\n      </p>\n      <p v-if=\"days.saturday != 0\">\n        Saturday: {{ days.saturday }} x {{ rate }} =\n        {{ days.saturday * rate }}\n      </p>\n      <p>\n        Total:\n        {{\n          days.sunday * rate +\n          days.monday * rate +\n          days.tuesday * rate +\n          days.wednesday * rate +\n          days.thursday * rate +\n          days.friday * rate +\n          days.saturday * rate\n        }}\n      </p>\n    </v-sheet>\n    <v-sheet>\n      <v-toolbar dense dark color=\"primary\">\n        <v-toolbar-title> Cleaning Hours PT </v-toolbar-title>\n      </v-toolbar>\n\n      <v-date-picker\n        v-model=\"ptDates\"\n        multiple\n        elevation=\"5\"\n        no-title\n        @input=\"updatePTDates\"\n        :picker-date.sync=\"ptMonthChange\"\n      >\n      </v-date-picker>\n      <p v-if=\"ptDays.sunday != 0\">\n        Sunday: {{ ptDays.sunday }} x {{ ptRate }} =\n        {{ ptDays.sunday * ptRate }}\n      </p>\n      <p v-if=\"ptDays.monday != 0\">\n        Monday: {{ ptDays.monday }} x {{ ptRate }} =\n        {{ ptDays.monday * ptRate }}\n      </p>\n      <p v-if=\"ptDays.tuesday != 0\">\n        Tuesday: {{ ptDays.tuesday }} x {{ ptRate }} =\n        {{ ptDays.tuesday * ptRate }}\n      </p>\n      <p v-if=\"ptDays.wednesday != 0\">\n        Wednesday: {{ ptDays.wednesday }} x {{ ptRate }} =\n        {{ ptDays.wednesday * ptRate }}\n      </p>\n      <p v-if=\"ptDays.thursday != 0\">\n        Thursday: {{ ptDays.thursday }} x {{ ptRate }} =\n        {{ ptDays.thursday * ptRate }}\n      </p>\n      <p v-if=\"ptDays.friday != 0\">\n        Friday: {{ ptDays.friday }} x {{ ptRate }} =\n        {{ ptDays.friday * ptRate }}\n      </p>\n      <p v-if=\"ptDays.saturday != 0\">\n        Saturday: {{ ptDays.saturday }} x {{ ptRate }} =\n        {{ ptDays.saturday * ptRate }}\n      </p>\n      <p>\n        Total:\n        {{\n          ptDays.sunday * ptRate +\n          ptDays.monday * ptRate +\n          ptDays.tuesday * ptRate +\n          ptDays.wednesday * ptRate +\n          ptDays.thursday * ptRate +\n          ptDays.friday * ptRate +\n          ptDays.saturday * ptRate\n        }}\n      </p>\n    </v-sheet>\n  </v-container>\n</template>\n\n<script>\nimport moment from \"moment\";\nimport axios from \"axios\";\n\nexport default {\n  data: () => ({\n    baseUrl: \"http://localhost:3000/timesheet\",\n\n    monthChange: null,\n    month: \"\",\n    dates: [\"\"],\n    days: {\n      sunday: 0,\n      monday: 0,\n      tuesday: 0,\n      wednesday: 0,\n      thursday: 0,\n      friday: 0,\n      saturday: 0,\n    },\n    rate: 100,\n    monthObject: null,\n\n    ptMonthChange: null,\n    ptMonth: \"\",\n    ptDates: [\"\"],\n    ptDays: {\n      sunday: 0,\n      monday: 0,\n      tuesday: 0,\n      wednesday: 0,\n      thursday: 0,\n      friday: 0,\n      saturday: 0,\n    },\n    ptRate: 50,\n    ptMonthObject: null,\n  }),\n  mounted() {\n    // this.getTimesheet(\"reg\", \"2022-04\");\n  },\n  watch: {\n    /**\n     * Cleaning Hours\n     */\n    monthChange(yearMonth) {\n      this.month = yearMonth;\n      this.getTimesheet(\"reg\", yearMonth);\n    },\n    /**\n     * Cleaning Hours PT\n     */\n    ptMonthChange(yearMonth) {\n      this.ptMonth = yearMonth;\n      this.getTimesheet(\"reg\", yearMonth);\n    },\n  },\n  methods: {\n    getTimesheet(type, month) {\n      axios.get(`${this.baseUrl}/${type}/${month}`).then((res) => {\n        if (res.data.length != 0) {\n          if (type === \"reg\") {\n            this.monthObject = res.data;\n          } else {\n            this.ptMonthObject = res.data;\n          }\n        }\n        console.log(\"month: \" + this.monthObject);\n        console.log(\"ptmonth: \" + this.ptMonthObject);\n      });\n    },\n    createTimesheet(type, month) {\n      let dates;\n      let days;\n      if (type === \"reg\") {\n        dates = this.dates;\n        days = this.days;\n      } else {\n        dates = this.ptDates;\n        days = this.ptDays;\n      }\n\n      axios\n        .post(this.baseUrl, {\n          name: type,\n          yearMonth: month,\n          dates: dates,\n          days: days,\n        })\n        .then((res) => {\n          if (type === \"reg\") {\n            this.monthObject = res.data;\n          } else {\n            this.ptMonthObject = res.data;\n          }\n        });\n    },\n    /**\n     * Regular days methods\n     */\n    updateDates(dates) {\n      this.prepDays();\n      this.countDays(dates);\n\n      // if we have data, then call patch\n      if (this.monthObject) {\n        console.log(\"patching\");\n      } else {\n        // if not then post\n        console.log(\"posting\");\n        this.createTimesheet(\"reg\", this.month);\n      }\n    },\n    prepDays() {\n      this.days = {\n        sunday: 0,\n        monday: 0,\n        tuesday: 0,\n        wednesday: 0,\n        thursday: 0,\n        friday: 0,\n        saturday: 0,\n      };\n    },\n    countDays(dates) {\n      dates.forEach((date) => {\n        if (date != \"\") {\n          let day = moment(date).format(\"dddd\");\n          this.addToDays(day);\n        }\n      });\n    },\n    addToDays(day) {\n      switch (day) {\n        case \"Sunday\":\n          this.days.sunday += 1;\n          break;\n        case \"Monday\":\n          this.days.monday += 1;\n          break;\n        case \"Tuesday\":\n          this.days.tuesday += 1;\n          break;\n        case \"Wednesday\":\n          this.days.wednesday += 1;\n          break;\n        case \"Thursday\":\n          this.days.thursday += 1;\n          break;\n        case \"Friday\":\n          this.days.friday += 1;\n          break;\n        case \"Saturday\":\n          this.days.saturday += 1;\n          break;\n        default:\n          break;\n      }\n    },\n    /**\n     * PT days methods\n     */\n    updatePTDates(dates) {\n      this.prepPTDays();\n      this.countPTDays(dates);\n    },\n    prepPTDays() {\n      this.ptDays = {\n        sunday: 0,\n        monday: 0,\n        tuesday: 0,\n        wednesday: 0,\n        thursday: 0,\n        friday: 0,\n        saturday: 0,\n      };\n    },\n    countPTDays(dates) {\n      dates.forEach((date) => {\n        if (date != \"\") {\n          let day = moment(date).format(\"dddd\");\n          this.addToPTDays(day);\n        }\n      });\n    },\n    addToPTDays(day) {\n      switch (day) {\n        case \"Sunday\":\n          this.ptDays.sunday += 1;\n          break;\n        case \"Monday\":\n          this.ptDays.monday += 1;\n          break;\n        case \"Tuesday\":\n          this.ptDays.tuesday += 1;\n          break;\n        case \"Wednesday\":\n          this.ptDays.wednesday += 1;\n          break;\n        case \"Thursday\":\n          this.ptDays.thursday += 1;\n          break;\n        case \"Friday\":\n          this.ptDays.friday += 1;\n          break;\n        case \"Saturday\":\n          this.ptDays.saturday += 1;\n          break;\n        default:\n          break;\n      }\n    },\n  },\n};\n</script>"]},"metadata":{},"sourceType":"module"}