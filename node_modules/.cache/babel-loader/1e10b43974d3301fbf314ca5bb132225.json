{"ast":null,"code":"import \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.test.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport moment from \"moment\";\nimport axios from 'axios';\nexport default {\n  data: function data() {\n    return {\n      monthChange: null,\n      dates: [\"\"],\n      days: {\n        sunday: 0,\n        monday: 0,\n        tuesday: 0,\n        wednesday: 0,\n        thursday: 0,\n        friday: 0,\n        saturday: 0\n      },\n      rate: 100,\n      ptMonthChange: null,\n      ptDates: [\"\"],\n      ptDays: {\n        sunday: 0,\n        monday: 0,\n        tuesday: 0,\n        wednesday: 0,\n        thursday: 0,\n        friday: 0,\n        saturday: 0\n      },\n      ptRate: 50\n    };\n  },\n  mounted: function mounted() {},\n  watch: {\n    /**\n     * Cleaning Hours\n     */\n    monthChange: function monthChange(newval) {\n      // here you can check if month changed using newval and oldval\n      this.dates = [\"\"];\n      this.days = {\n        sunday: 0,\n        monday: 0,\n        tuesday: 0,\n        wednesday: 0,\n        thursday: 0,\n        friday: 0,\n        saturday: 0\n      };\n      this.test(newval);\n    },\n\n    /**\n     * Cleaning Hours PT\n     */\n    ptMonthChange: function ptMonthChange(newval) {\n      // here you can check if month changed using newval and oldval\n      this.ptDates = [\"\"];\n      this.ptDays = {\n        sunday: 0,\n        monday: 0,\n        tuesday: 0,\n        wednesday: 0,\n        thursday: 0,\n        friday: 0,\n        saturday: 0\n      };\n      this.test(newval);\n    }\n  },\n  methods: {\n    test: function test(date) {\n      console.log(\"EVENT!: \" + date);\n    },\n\n    /**\n     * Regular days methods\n     */\n    updateDates: function updateDates(dates) {\n      this.prepDays();\n      this.countDays(dates);\n    },\n    prepDays: function prepDays() {\n      this.days = {\n        sunday: 0,\n        monday: 0,\n        tuesday: 0,\n        wednesday: 0,\n        thursday: 0,\n        friday: 0,\n        saturday: 0\n      };\n    },\n    countDays: function countDays(dates) {\n      var _this = this;\n\n      dates.forEach(function (date) {\n        if (date != \"\") {\n          var day = moment(date).format(\"dddd\");\n\n          _this.addToDays(day);\n        }\n      });\n    },\n    addToDays: function addToDays(day) {\n      switch (day) {\n        case \"Sunday\":\n          this.days.sunday += 1;\n          break;\n\n        case \"Monday\":\n          this.days.monday += 1;\n          break;\n\n        case \"Tuesday\":\n          this.days.tuesday += 1;\n          break;\n\n        case \"Wednesday\":\n          this.days.wednesday += 1;\n          break;\n\n        case \"Thursday\":\n          this.days.thursday += 1;\n          break;\n\n        case \"Friday\":\n          this.days.friday += 1;\n          break;\n\n        case \"Saturday\":\n          this.days.saturday += 1;\n          break;\n\n        default:\n          break;\n      }\n    },\n\n    /**\n     * PT days methods\n     */\n    updatePTDates: function updatePTDates(dates) {\n      this.prepPTDays();\n      this.countPTDays(dates);\n    },\n    prepPTDays: function prepPTDays() {\n      this.ptDays = {\n        sunday: 0,\n        monday: 0,\n        tuesday: 0,\n        wednesday: 0,\n        thursday: 0,\n        friday: 0,\n        saturday: 0\n      };\n    },\n    countPTDays: function countPTDays(dates) {\n      var _this2 = this;\n\n      dates.forEach(function (date) {\n        if (date != \"\") {\n          var day = moment(date).format(\"dddd\");\n\n          _this2.addToPTDays(day);\n        }\n      });\n    },\n    addToPTDays: function addToPTDays(day) {\n      switch (day) {\n        case \"Sunday\":\n          this.ptDays.sunday += 1;\n          break;\n\n        case \"Monday\":\n          this.ptDays.monday += 1;\n          break;\n\n        case \"Tuesday\":\n          this.ptDays.tuesday += 1;\n          break;\n\n        case \"Wednesday\":\n          this.ptDays.wednesday += 1;\n          break;\n\n        case \"Thursday\":\n          this.ptDays.thursday += 1;\n          break;\n\n        case \"Friday\":\n          this.ptDays.friday += 1;\n          break;\n\n        case \"Saturday\":\n          this.ptDays.saturday += 1;\n          break;\n\n        default:\n          break;\n      }\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkHA;AACA;AAEA;AACAA;AAAA;AACAC,uBADA;AAEAC,iBAFA;AAGAC;AACAC,iBADA;AAEAC,iBAFA;AAGAC,kBAHA;AAIAC,oBAJA;AAKAC,mBALA;AAMAC,iBANA;AAOAC;AAPA,OAHA;AAYAC,eAZA;AAcAC,yBAdA;AAeAC,mBAfA;AAgBAC;AACAV,iBADA;AAEAC,iBAFA;AAGAC,kBAHA;AAIAC,oBAJA;AAKAC,mBALA;AAMAC,iBANA;AAOAC;AAPA,OAhBA;AAyBAK;AAzBA;AAAA,GADA;AA4BAC,gCA5BA;AA6BAC;AACA;AACA;AACA;AACAhB,eAJA,uBAIAiB,MAJA,EAIA;AACA;AACA;AACA;AACAd,iBADA;AAEAC,iBAFA;AAGAC,kBAHA;AAIAC,oBAJA;AAKAC,mBALA;AAMAC,iBANA;AAOAC;AAPA;AASA;AACA,KAjBA;;AAkBA;AACA;AACA;AACAE,iBArBA,yBAqBAM,MArBA,EAqBA;AACA;AACA;AACA;AACAd,iBADA;AAEAC,iBAFA;AAGAC,kBAHA;AAIAC,oBAJA;AAKAC,mBALA;AAMAC,iBANA;AAOAC;AAPA;AASA;AACA;AAlCA,GA7BA;AAiEAS;AACAC,QADA,gBACAC,IADA,EACA;AACAC;AACA,KAHA;;AAIA;AACA;AACA;AACAC,eAPA,uBAOArB,KAPA,EAOA;AACA;AACA;AACA,KAVA;AAWAsB,YAXA,sBAWA;AACA;AACApB,iBADA;AAEAC,iBAFA;AAGAC,kBAHA;AAIAC,oBAJA;AAKAC,mBALA;AAMAC,iBANA;AAOAC;AAPA;AASA,KArBA;AAsBAe,aAtBA,qBAsBAvB,KAtBA,EAsBA;AAAA;;AACAA;AACA;AACA;;AACA;AACA;AACA,OALA;AAMA,KA7BA;AA8BAwB,aA9BA,qBA8BAC,GA9BA,EA8BA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AAvBA;AAyBA,KAxDA;;AAyDA;AACA;AACA;AACAC,iBA5DA,yBA4DA1B,KA5DA,EA4DA;AACA;AACA;AACA,KA/DA;AAgEA2B,cAhEA,wBAgEA;AACA;AACAzB,iBADA;AAEAC,iBAFA;AAGAC,kBAHA;AAIAC,oBAJA;AAKAC,mBALA;AAMAC,iBANA;AAOAC;AAPA;AASA,KA1EA;AA2EAoB,eA3EA,uBA2EA5B,KA3EA,EA2EA;AAAA;;AACAA;AACA;AACA;;AACA;AACA;AACA,OALA;AAMA,KAlFA;AAmFA6B,eAnFA,uBAmFAJ,GAnFA,EAmFA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AAvBA;AAyBA;AA7GA;AAjEA","names":["data","monthChange","dates","days","sunday","monday","tuesday","wednesday","thursday","friday","saturday","rate","ptMonthChange","ptDates","ptDays","ptRate","mounted","watch","newval","methods","test","date","console","updateDates","prepDays","countDays","addToDays","day","updatePTDates","prepPTDays","countPTDays","addToPTDays"],"sourceRoot":"src/components","sources":["CleaningHours.vue"],"sourcesContent":["<template>\n  <v-container>\n    <v-sheet>\n      <v-toolbar dense dark color=\"primary\">\n        <v-toolbar-title> Cleaning Hours </v-toolbar-title>\n      </v-toolbar>\n\n      <v-date-picker\n        v-model=\"dates\"\n        reactive\n        multiple\n        elevation=\"5\"\n        no-title\n        @input=\"updateDates\"\n        :picker-date.sync=\"monthChange\"\n      >\n      </v-date-picker>\n      <p v-if=\"days.sunday != 0\">\n        Sunday: {{ days.sunday }} x {{ rate }} = {{ days.sunday * rate }}\n      </p>\n      <p v-if=\"days.monday != 0\">\n        Monday: {{ days.monday }} x {{ rate }} = {{ days.monday * rate }}\n      </p>\n      <p v-if=\"days.tuesday != 0\">\n        Tuesday: {{ days.tuesday }} x {{ rate }} =\n        {{ days.tuesday * rate }}\n      </p>\n      <p v-if=\"days.wednesday != 0\">\n        Wednesday: {{ days.wednesday }} x {{ rate }} =\n        {{ days.wednesday * rate }}\n      </p>\n      <p v-if=\"days.thursday != 0\">\n        Thursday: {{ days.thursday }} x {{ rate }} =\n        {{ days.thursday * rate }}\n      </p>\n      <p v-if=\"days.friday != 0\">\n        Friday: {{ days.friday }} x {{ rate }} = {{ days.friday * rate }}\n      </p>\n      <p v-if=\"days.saturday != 0\">\n        Saturday: {{ days.saturday }} x {{ rate }} =\n        {{ days.saturday * rate }}\n      </p>\n      <p>\n        Total:\n        {{\n          days.sunday * rate +\n          days.monday * rate +\n          days.tuesday * rate +\n          days.wednesday * rate +\n          days.thursday * rate +\n          days.friday * rate +\n          days.saturday * rate\n        }}\n      </p>\n    </v-sheet>\n    <v-sheet>\n      <v-toolbar dense dark color=\"primary\">\n        <v-toolbar-title> Cleaning Hours PT </v-toolbar-title>\n      </v-toolbar>\n\n      <v-date-picker\n        v-model=\"ptDates\"\n        multiple\n        elevation=\"5\"\n        no-title\n        @input=\"updatePTDates\"\n        :picker-date.sync=\"ptMonthChange\"\n      >\n      </v-date-picker>\n      <p v-if=\"ptDays.sunday != 0\">\n        Sunday: {{ ptDays.sunday }} x {{ ptRate }} =\n        {{ ptDays.sunday * ptRate }}\n      </p>\n      <p v-if=\"ptDays.monday != 0\">\n        Monday: {{ ptDays.monday }} x {{ ptRate }} =\n        {{ ptDays.monday * ptRate }}\n      </p>\n      <p v-if=\"ptDays.tuesday != 0\">\n        Tuesday: {{ ptDays.tuesday }} x {{ ptRate }} =\n        {{ ptDays.tuesday * ptRate }}\n      </p>\n      <p v-if=\"ptDays.wednesday != 0\">\n        Wednesday: {{ ptDays.wednesday }} x {{ ptRate }} =\n        {{ ptDays.wednesday * ptRate }}\n      </p>\n      <p v-if=\"ptDays.thursday != 0\">\n        Thursday: {{ ptDays.thursday }} x {{ ptRate }} =\n        {{ ptDays.thursday * ptRate }}\n      </p>\n      <p v-if=\"ptDays.friday != 0\">\n        Friday: {{ ptDays.friday }} x {{ ptRate }} =\n        {{ ptDays.friday * ptRate }}\n      </p>\n      <p v-if=\"ptDays.saturday != 0\">\n        Saturday: {{ ptDays.saturday }} x {{ ptRate }} =\n        {{ ptDays.saturday * ptRate }}\n      </p>\n      <p>\n        Total:\n        {{\n          ptDays.sunday * ptRate +\n          ptDays.monday * ptRate +\n          ptDays.tuesday * ptRate +\n          ptDays.wednesday * ptRate +\n          ptDays.thursday * ptRate +\n          ptDays.friday * ptRate +\n          ptDays.saturday * ptRate\n        }}\n      </p>\n    </v-sheet>\n  </v-container>\n</template>\n\n<script>\nimport moment from \"moment\";\nimport axios from 'axios'\n\nexport default {\n  data: () => ({\n    monthChange: null,\n    dates: [\"\"],\n    days: {\n      sunday: 0,\n      monday: 0,\n      tuesday: 0,\n      wednesday: 0,\n      thursday: 0,\n      friday: 0,\n      saturday: 0,\n    },\n    rate: 100,\n\n    ptMonthChange: null,\n    ptDates: [\"\"],\n    ptDays: {\n      sunday: 0,\n      monday: 0,\n      tuesday: 0,\n      wednesday: 0,\n      thursday: 0,\n      friday: 0,\n      saturday: 0,\n    },\n    ptRate: 50,\n  }),\n  mounted: () => {},\n  watch: {\n    /**\n     * Cleaning Hours\n     */\n    monthChange(newval) {\n      // here you can check if month changed using newval and oldval\n      this.dates = [\"\"];\n      this.days = {\n        sunday: 0,\n        monday: 0,\n        tuesday: 0,\n        wednesday: 0,\n        thursday: 0,\n        friday: 0,\n        saturday: 0,\n      };\n      this.test(newval);\n    },\n    /**\n     * Cleaning Hours PT\n     */\n    ptMonthChange(newval) {\n      // here you can check if month changed using newval and oldval\n      this.ptDates = [\"\"];\n      this.ptDays = {\n        sunday: 0,\n        monday: 0,\n        tuesday: 0,\n        wednesday: 0,\n        thursday: 0,\n        friday: 0,\n        saturday: 0,\n      };\n      this.test(newval);\n    },\n  },\n  methods: {\n    test(date) {\n      console.log(\"EVENT!: \" + date);\n    },\n    /**\n     * Regular days methods\n     */\n    updateDates(dates) {\n      this.prepDays();\n      this.countDays(dates);\n    },\n    prepDays() {\n      this.days = {\n        sunday: 0,\n        monday: 0,\n        tuesday: 0,\n        wednesday: 0,\n        thursday: 0,\n        friday: 0,\n        saturday: 0,\n      };\n    },\n    countDays(dates) {\n      dates.forEach((date) => {\n        if (date != \"\") {\n          let day = moment(date).format(\"dddd\");\n          this.addToDays(day);\n        }\n      });\n    },\n    addToDays(day) {\n      switch (day) {\n        case \"Sunday\":\n          this.days.sunday += 1;\n          break;\n        case \"Monday\":\n          this.days.monday += 1;\n          break;\n        case \"Tuesday\":\n          this.days.tuesday += 1;\n          break;\n        case \"Wednesday\":\n          this.days.wednesday += 1;\n          break;\n        case \"Thursday\":\n          this.days.thursday += 1;\n          break;\n        case \"Friday\":\n          this.days.friday += 1;\n          break;\n        case \"Saturday\":\n          this.days.saturday += 1;\n          break;\n        default:\n          break;\n      }\n    },\n    /**\n     * PT days methods\n     */\n    updatePTDates(dates) {\n      this.prepPTDays();\n      this.countPTDays(dates);\n    },\n    prepPTDays() {\n      this.ptDays = {\n        sunday: 0,\n        monday: 0,\n        tuesday: 0,\n        wednesday: 0,\n        thursday: 0,\n        friday: 0,\n        saturday: 0,\n      };\n    },\n    countPTDays(dates) {\n      dates.forEach((date) => {\n        if (date != \"\") {\n          let day = moment(date).format(\"dddd\");\n          this.addToPTDays(day);\n        }\n      });\n    },\n    addToPTDays(day) {\n      switch (day) {\n        case \"Sunday\":\n          this.ptDays.sunday += 1;\n          break;\n        case \"Monday\":\n          this.ptDays.monday += 1;\n          break;\n        case \"Tuesday\":\n          this.ptDays.tuesday += 1;\n          break;\n        case \"Wednesday\":\n          this.ptDays.wednesday += 1;\n          break;\n        case \"Thursday\":\n          this.ptDays.thursday += 1;\n          break;\n        case \"Friday\":\n          this.ptDays.friday += 1;\n          break;\n        case \"Saturday\":\n          this.ptDays.saturday += 1;\n          break;\n        default:\n          break;\n      }\n    },\n  },\n};\n</script>"]},"metadata":{},"sourceType":"module"}